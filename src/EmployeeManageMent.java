
import java.awt.HeadlessException;
import java.awt.image.BufferedImage;
import java.io.ByteArrayInputStream;
import java.io.ByteArrayOutputStream;
import java.io.File;
import java.io.IOException;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.text.MessageFormat;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Date;
import javax.imageio.ImageIO;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.event.DocumentEvent;
import javax.swing.event.DocumentListener;
import javax.swing.filechooser.FileNameExtensionFilter;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;
import net.coobird.thumbnailator.Thumbnails;
import net.proteanit.sql.DbUtils;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author DELL
 */
public class EmployeeManageMent extends javax.swing.JFrame {

    /**
     * Creates new form EmployeeManageMent
     */
    public EmployeeManageMent() {
        initComponents();
         conn = MySQLConnect.getConnection();
         String sql = "SELECT * FROM employees";
         updateTableData(sql);
         disableAll();
         txtSrch.getDocument().addDocumentListener(new DocumentListener(){
         
             @Override
            public void insertUpdate(DocumentEvent e) {
                searchFilter();
            }

            @Override
            public void removeUpdate(DocumentEvent e) {
                searchFilter();
            }

            @Override
            public void changedUpdate(DocumentEvent e) {
              
            }
         });     
      }
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel2 = new javax.swing.JLabel();
        buttonGroup1 = new javax.swing.ButtonGroup();
        rbtTemp = new javax.swing.JRadioButton();
        jPanel2 = new javax.swing.JPanel();
        jPanel5 = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        txtName = new javax.swing.JTextField();
        txtId = new javax.swing.JTextField();
        maleButton = new javax.swing.JRadioButton();
        femaleButton = new javax.swing.JRadioButton();
        txtAge = new javax.swing.JTextField();
        cmbBlood = new javax.swing.JComboBox<>();
        txtNumber = new javax.swing.JTextField();
        cmbQuali = new javax.swing.JComboBox<>();
        jLabel10 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        txtAdress = new javax.swing.JTextArea();
        butImage = new javax.swing.JButton();
        jLabel11 = new javax.swing.JLabel();
        txtImgPath = new javax.swing.JTextField();
        jDesktopPane1 = new javax.swing.JDesktopPane();
        lblImage = new javax.swing.JPanel();
        emp_image = new javax.swing.JLabel();
        jdc = new com.toedter.calendar.JDateChooser();
        jPanel6 = new javax.swing.JPanel();
        jPanel7 = new javax.swing.JPanel();
        newBut = new javax.swing.JButton();
        saveBut = new javax.swing.JButton();
        updateBut = new javax.swing.JButton();
        clrBut = new javax.swing.JButton();
        printBut = new javax.swing.JButton();
        jLabel12 = new javax.swing.JLabel();
        txtSrch = new javax.swing.JTextField();
        delBut = new javax.swing.JButton();
        jPanel8 = new javax.swing.JPanel();
        jPanel4 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jtableData = new javax.swing.JTable();

        jLabel2.setText("jLabel2");

        rbtTemp.setText("jRadioButton1");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel3.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true));

        jLabel1.setFont(new java.awt.Font("Open Sans", 0, 14)); // NOI18N
        jLabel1.setText("Employee ID");

        jLabel3.setFont(new java.awt.Font("Open Sans", 0, 14)); // NOI18N
        jLabel3.setText("Employee Name");

        jLabel4.setFont(new java.awt.Font("Open Sans", 0, 14)); // NOI18N
        jLabel4.setText("Gender");

        jLabel5.setFont(new java.awt.Font("Open Sans", 0, 14)); // NOI18N
        jLabel5.setText("Age");

        jLabel6.setFont(new java.awt.Font("Open Sans", 0, 14)); // NOI18N
        jLabel6.setText("Blood Group");

        jLabel7.setFont(new java.awt.Font("Open Sans", 0, 14)); // NOI18N
        jLabel7.setText("Contact Number");

        jLabel8.setFont(new java.awt.Font("Open Sans", 0, 14)); // NOI18N
        jLabel8.setText("Qualification");

        jLabel9.setFont(new java.awt.Font("Open Sans", 0, 14)); // NOI18N
        jLabel9.setText("DOJ");

        txtName.setFont(new java.awt.Font("Open Sans", 0, 14)); // NOI18N
        txtName.setNextFocusableComponent(maleButton);

        txtId.setEditable(false);
        txtId.setFont(new java.awt.Font("Open Sans", 0, 14)); // NOI18N
        txtId.setNextFocusableComponent(txtName);

        maleButton.setFont(new java.awt.Font("Open Sans", 0, 14)); // NOI18N
        maleButton.setText("Male");
        maleButton.setNextFocusableComponent(femaleButton);
        maleButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                maleButtonActionPerformed(evt);
            }
        });

        femaleButton.setFont(new java.awt.Font("Open Sans", 0, 14)); // NOI18N
        femaleButton.setText("Female");
        femaleButton.setNextFocusableComponent(txtAge);
        femaleButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                femaleButtonActionPerformed(evt);
            }
        });

        txtAge.setNextFocusableComponent(cmbBlood);
        txtAge.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtAgeActionPerformed(evt);
            }
        });

        cmbBlood.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "A+", "A-", "B+", "B-", "AB+", "AB-", "O+", "O-" }));
        cmbBlood.setSelectedIndex(-1);
        cmbBlood.setNextFocusableComponent(txtNumber);

        txtNumber.setFont(new java.awt.Font("Open Sans", 0, 14)); // NOI18N
        txtNumber.setNextFocusableComponent(cmbQuali);

        cmbQuali.setFont(new java.awt.Font("Open Sans", 0, 14)); // NOI18N
        cmbQuali.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "B.com", "B.E", "CA", "CS" }));
        cmbQuali.setSelectedIndex(-1);
        cmbQuali.setNextFocusableComponent(jdc);

        jLabel10.setFont(new java.awt.Font("Open Sans", 0, 14)); // NOI18N
        jLabel10.setText("Address");

        jScrollPane1.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);
        jScrollPane1.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_NEVER);

        txtAdress.setColumns(20);
        txtAdress.setFont(new java.awt.Font("Open Sans", 0, 14)); // NOI18N
        txtAdress.setRows(5);
        txtAdress.setNextFocusableComponent(butImage);
        jScrollPane1.setViewportView(txtAdress);

        butImage.setFont(new java.awt.Font("Open Sans", 0, 14)); // NOI18N
        butImage.setText("Upload Image");
        butImage.setNextFocusableComponent(txtImgPath);
        butImage.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                butImageActionPerformed(evt);
            }
        });

        jLabel11.setFont(new java.awt.Font("Open Sans", 0, 14)); // NOI18N
        jLabel11.setText("Image Path");

        txtImgPath.setEditable(false);
        txtImgPath.setFont(new java.awt.Font("Open Sans", 0, 14)); // NOI18N
        txtImgPath.setNextFocusableComponent(txtSrch);

        jDesktopPane1.setBackground(new java.awt.Color(102, 102, 102));

        lblImage.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(255, 255, 255), 1, true));
        lblImage.setOpaque(false);

        javax.swing.GroupLayout lblImageLayout = new javax.swing.GroupLayout(lblImage);
        lblImage.setLayout(lblImageLayout);
        lblImageLayout.setHorizontalGroup(
            lblImageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(emp_image, javax.swing.GroupLayout.DEFAULT_SIZE, 227, Short.MAX_VALUE)
        );
        lblImageLayout.setVerticalGroup(
            lblImageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(emp_image, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        jDesktopPane1.setLayer(lblImage, javax.swing.JLayeredPane.DEFAULT_LAYER);

        javax.swing.GroupLayout jDesktopPane1Layout = new javax.swing.GroupLayout(jDesktopPane1);
        jDesktopPane1.setLayout(jDesktopPane1Layout);
        jDesktopPane1Layout.setHorizontalGroup(
            jDesktopPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jDesktopPane1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblImage, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        jDesktopPane1Layout.setVerticalGroup(
            jDesktopPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jDesktopPane1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblImage, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        jdc.setToolTipText("");
        jdc.setFont(new java.awt.Font("Open Sans", 0, 14)); // NOI18N
        jdc.setNextFocusableComponent(txtAdress);

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3)
                            .addComponent(jLabel1)
                            .addComponent(jLabel4)
                            .addComponent(jLabel5)
                            .addComponent(jLabel6))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(cmbBlood, javax.swing.GroupLayout.Alignment.LEADING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(txtAge, javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(jPanel3Layout.createSequentialGroup()
                                    .addComponent(maleButton)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addComponent(femaleButton)))
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(txtName, javax.swing.GroupLayout.DEFAULT_SIZE, 133, Short.MAX_VALUE)
                                        .addComponent(txtId))
                                    .addGroup(jPanel3Layout.createSequentialGroup()
                                        .addGap(2, 2, 2)
                                        .addComponent(jdc, javax.swing.GroupLayout.PREFERRED_SIZE, 131, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGap(20, 20, 20)
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel11)
                                    .addComponent(jLabel10)))))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel7)
                            .addComponent(jLabel8))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txtNumber)
                            .addComponent(cmbQuali, 0, 131, Short.MAX_VALUE)))
                    .addComponent(jLabel9))
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 218, Short.MAX_VALUE)
                    .addComponent(butImage, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(txtImgPath))
                .addGap(20, 20, 20)
                .addComponent(jDesktopPane1)
                .addGap(20, 20, 20))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(40, 40, 40)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jDesktopPane1)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel1)
                                    .addComponent(txtId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel10))
                                .addGap(18, 18, 18)
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel3)
                                    .addComponent(txtName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel4)
                                    .addComponent(maleButton)
                                    .addComponent(femaleButton))
                                .addGap(18, 18, 18)
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel5)
                                    .addComponent(txtAge, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel6)
                                    .addComponent(cmbBlood, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel7)
                                    .addComponent(txtNumber, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addComponent(jScrollPane1))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel8)
                            .addComponent(cmbQuali, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(butImage))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jdc, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jLabel9)
                                .addComponent(jLabel11)
                                .addComponent(txtImgPath, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addContainerGap(40, Short.MAX_VALUE))
        );

        jPanel5.add(jPanel3);

        jPanel7.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true));

        newBut.setFont(new java.awt.Font("Open Sans", 0, 14)); // NOI18N
        newBut.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/new-icon.png"))); // NOI18N
        newBut.setText("New");
        newBut.setNextFocusableComponent(saveBut);
        newBut.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                newButActionPerformed(evt);
            }
        });

        saveBut.setFont(new java.awt.Font("Open Sans", 0, 14)); // NOI18N
        saveBut.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/Save-icon.png"))); // NOI18N
        saveBut.setText("Save");
        saveBut.setEnabled(false);
        saveBut.setNextFocusableComponent(updateBut);
        saveBut.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveButActionPerformed(evt);
            }
        });

        updateBut.setFont(new java.awt.Font("Open Sans", 0, 14)); // NOI18N
        updateBut.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/update.png"))); // NOI18N
        updateBut.setText("Update");
        updateBut.setEnabled(false);
        updateBut.setNextFocusableComponent(clrBut);
        updateBut.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateButActionPerformed(evt);
            }
        });

        clrBut.setFont(new java.awt.Font("Open Sans", 0, 14)); // NOI18N
        clrBut.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/clear.png"))); // NOI18N
        clrBut.setText("Clear");
        clrBut.setNextFocusableComponent(printBut);
        clrBut.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clrButActionPerformed(evt);
            }
        });

        printBut.setFont(new java.awt.Font("Open Sans", 0, 14)); // NOI18N
        printBut.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/button-round-arrow-right-icon.png"))); // NOI18N
        printBut.setText("Print");
        printBut.setNextFocusableComponent(jtableData);
        printBut.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                printButActionPerformed(evt);
            }
        });

        jLabel12.setFont(new java.awt.Font("Open Sans", 0, 14)); // NOI18N
        jLabel12.setText("SEARCH");

        txtSrch.setFont(new java.awt.Font("Open Sans", 0, 14)); // NOI18N
        txtSrch.setNextFocusableComponent(newBut);

        delBut.setFont(new java.awt.Font("Open Sans", 0, 14)); // NOI18N
        delBut.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/delete.png"))); // NOI18N
        delBut.setText("Delete");
        delBut.setEnabled(false);
        delBut.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                delButActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addComponent(jLabel12)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(txtSrch, javax.swing.GroupLayout.DEFAULT_SIZE, 87, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addComponent(newBut, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(saveBut, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(updateBut, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(clrBut, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(delBut)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(printBut)
                .addGap(7, 7, 7))
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addGap(33, 33, 33)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(newBut)
                    .addComponent(saveBut)
                    .addComponent(updateBut)
                    .addComponent(clrBut)
                    .addComponent(printBut)
                    .addComponent(jLabel12)
                    .addComponent(txtSrch, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(delBut))
                .addContainerGap(45, Short.MAX_VALUE))
        );

        jPanel6.add(jPanel7);

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 288, Short.MAX_VALUE)
        );

        jtableData.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jtableData.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jtableDataMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(jtableData);

        javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane2))
                .addContainerGap())
        );
        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 228, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jPanel8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    
    
    private void txtAgeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtAgeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtAgeActionPerformed

    private void butImageActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_butImageActionPerformed
        // TODO add your handling code here:
        JFileChooser chooser = new JFileChooser();
            chooser.setFileFilter(new FileNameExtensionFilter("Image Files", "jpg", "jpeg", "png", "bmp"));
            chooser.showOpenDialog(this);
            File source = chooser.getSelectedFile();
            if(source != null){
                String sourceFilePath = source.getAbsolutePath();
                txtImgPath.setText(sourceFilePath);
                BufferedImage thumbnail;
                try {
                    thumbnail = Thumbnails.of(source).size(250, 290).asBufferedImage();
                    ByteArrayOutputStream baos = new ByteArrayOutputStream();
                    ImageIO.write(thumbnail, "jpg", baos);
                    byteImage = baos.toByteArray();
                    emp_image.setIcon(new ImageIcon(thumbnail));
                } catch (Exception e) {
                }
            }
                
                
    }//GEN-LAST:event_butImageActionPerformed

    private void saveButActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveButActionPerformed
        // TODO add your handling code here:
        
            if(operation==INSERT){
                insertEmployee();
            }else if(operation == UPDATE){
                updateEmployee();
            }
            disableAll();
            saveBut.setEnabled(false);
            newBut.setEnabled(true);
        
        
        
        
    }//GEN-LAST:event_saveButActionPerformed

    private void maleButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_maleButtonActionPerformed
        // TODO add your handling code here:
        gender ="male";
    }//GEN-LAST:event_maleButtonActionPerformed

    private void femaleButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_femaleButtonActionPerformed
        // TODO add your handling code here:
        gender = "female";
    }//GEN-LAST:event_femaleButtonActionPerformed

    private void clrButActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clrButActionPerformed
        // TODO add your handling code here:
        clearAllFields();
    }//GEN-LAST:event_clrButActionPerformed

    private void jtableDataMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jtableDataMouseClicked
        // TODO add your handling code here:
        int selectedRow = jtableData.getSelectedRow();
        String selectedEmpID = jtableData.getModel().getValueAt(selectedRow, 0).toString();
        
        try{
            String sql  = "SELECT * FROM employees WHERE id = "+selectedEmpID;
            ps = conn.prepareStatement(sql);
            rs = ps.executeQuery();
            
            if(rs.next()){
            txtId.setText(rs.getString("id"));
            txtName.setText(rs.getString("name"));
            
            String dbGender = rs.getString("gender");
            if("Male".equals(dbGender)){
                maleButton.setSelected(true);
                gender = "male";
               
                
            }else if("Female".equals(dbGender)){
                femaleButton.setSelected(true);
                gender = "female";
            }
            
            txtAge.setText(rs.getString("age"));
            cmbBlood.setSelectedItem(rs.getString("blood_group"));
            txtNumber.setText(rs.getString("contact"));
            cmbQuali.setSelectedItem(rs.getString("qualification"));
            
            String dbDoJ = rs.getString("doj");
            Date date = new SimpleDateFormat("yyyy-MM-dd").parse(dbDoJ);
            jdc.setDate(date);
            
            txtAdress.setText(rs.getString("address"));
            
            byteImage = rs.getBytes("image");
            BufferedImage image = ImageIO.read(new ByteArrayInputStream(byteImage));
            ImageIcon icon = new ImageIcon(image);
            emp_image.setIcon(icon);
            updateBut.setEnabled(true);
           delBut.setEnabled(true);
        }
        } catch (SQLException | ParseException | IOException ex) {
            JOptionPane.showMessageDialog(null, "Wrong"+ex.getMessage());
        } 
    }//GEN-LAST:event_jtableDataMouseClicked

    private void delButActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_delButActionPerformed
        // TODO add your handling code here:
        int ans = JOptionPane.showConfirmDialog(null, "Are You Sure you want to delete?", "Delete! ", JOptionPane.YES_NO_OPTION,JOptionPane.QUESTION_MESSAGE);
        if(ans == JOptionPane.YES_OPTION){
            String sql = "DELETE FROM employees WHERE id = ?";
            
            try{
                ps = conn.prepareStatement(sql);
                ps.setInt(1, Integer.parseInt(txtId.getText()));
                ps.execute();
                clearAllFields();
                String sqlUpdateTable = "SELECT * FROM employees";
                updateTableData(sqlUpdateTable);
                JOptionPane.showMessageDialog(null, "Record Deleted");
                
                
            } catch (SQLException ex) {
                 JOptionPane.showMessageDialog(null, "Wrong"+ex.getMessage());
            }
            
        }else if(ans == JOptionPane.NO_OPTION){}
    }//GEN-LAST:event_delButActionPerformed

    private void newButActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_newButActionPerformed
        // TODO add your handling code here:
        
        clearAllFields();
        enableAll();
        saveBut.setEnabled(true);
        newBut.setEnabled(true);
        operation = INSERT;
    }//GEN-LAST:event_newButActionPerformed

    private void updateButActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateButActionPerformed
        // TODO add your handling code here:
        operation = UPDATE;
        enableAll();
        saveBut.setEnabled(true);
        newBut.setEnabled(true);
        delBut.setEnabled(true);
    }//GEN-LAST:event_updateButActionPerformed

    private void printButActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_printButActionPerformed
        // TODO add your handling code here:
        MessageFormat header = new MessageFormat("Employee Details");
        MessageFormat footer = new MessageFormat("Page - {0,number,integer}");
        try {
            jtableData.print(JTable.PrintMode.NORMAL, header, footer);
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Some error while Printing");
        }
    }//GEN-LAST:event_printButActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Windows".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(EmployeeManageMent.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(EmployeeManageMent.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(EmployeeManageMent.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(EmployeeManageMent.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
          //      new EmployeeManageMent().setVisible(true);
            }
        });
    }
    private static final int NOP = 0;
    private static final int INSERT = 1;
    private static final int UPDATE = 2;
    private int operation =NOP;
    private Connection conn = null;
     private byte[] byteImage;
    private PreparedStatement ps= null;
    private String gender;
    private ResultSet rs = null;
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton butImage;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JButton clrBut;
    private javax.swing.JComboBox<String> cmbBlood;
    private javax.swing.JComboBox<String> cmbQuali;
    private javax.swing.JButton delBut;
    private javax.swing.JLabel emp_image;
    private javax.swing.JRadioButton femaleButton;
    private javax.swing.JDesktopPane jDesktopPane1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private com.toedter.calendar.JDateChooser jdc;
    private javax.swing.JTable jtableData;
    private javax.swing.JPanel lblImage;
    private javax.swing.JRadioButton maleButton;
    private javax.swing.JButton newBut;
    private javax.swing.JButton printBut;
    private javax.swing.JRadioButton rbtTemp;
    private javax.swing.JButton saveBut;
    private javax.swing.JTextArea txtAdress;
    private javax.swing.JTextField txtAge;
    private javax.swing.JTextField txtId;
    private javax.swing.JTextField txtImgPath;
    private javax.swing.JTextField txtName;
    private javax.swing.JTextField txtNumber;
    private javax.swing.JTextField txtSrch;
    private javax.swing.JButton updateBut;
    // End of variables declaration//GEN-END:variables

    private void clearAllFields() {
        txtId.setText("");
        txtName.setText("");
        gender = "";
        rbtTemp.setSelected(true);
        txtAge.setText("");
        cmbBlood.setSelectedIndex(-1);
        txtNumber.setText("");
        cmbQuali.setSelectedIndex(-1);
        jdc.setDate(null);
        txtAdress.setText("");
        txtImgPath.setText("");
        emp_image.setIcon(null);
        
        
        
    }
    private void  insertEmployee(){
        String sql =  " INSERT INTO employees(name, gender, age, blood_group, contact,qualification,doj, address,image) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?)";
        
        String name = txtName.getText();
        String age = txtAge.getText();
        String bloodGroup = cmbBlood.getSelectedItem().toString();
        String contact = txtNumber.getText();
        String qualification = cmbQuali.getSelectedItem().toString();
        
        Date selectedDate = jdc.getDate();
        SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");
        String formattedDate = sdf.format(selectedDate);
        
        String address = txtAdress.getText();
         try {
            ps = conn.prepareStatement(sql);
            ps.setString(1, name);
            ps.setString(2, gender);
            //ps.setInt(3,Integer.parseInt(age));
            ps.setString(3,age);
            ps.setString(4, bloodGroup);
            ps.setString(5, contact);
            ps.setString(6,qualification);
            ps.setString(7,formattedDate);
            ps.setString(8,address);
            ps.setBytes(9,byteImage);
            ps.execute();
            JOptionPane.showMessageDialog(null, "'Record Inserted Sucess");
            clearAllFields();
            
            String sqlQueryData = "SELECT * FROM  employees";
            updateTableData(sqlQueryData);

            
        }
        catch(SQLException | HeadlessException e){
            JOptionPane.showMessageDialog(null, "Wrong"+e.getMessage());
        }

    }
    
    private void updateEmployee(){
        if(!"".equals(txtId.getText())){
            String sql = "UPDATE employees SET name =?, gender = ?, age = ? , blood_group = ?, contact = ?,qualification =?,doj= ?,address =?,image =? WHERE id = ?";
            
         String name = txtName.getText();
        String age = txtAge.getText();
        String bloodGroup = cmbBlood.getSelectedItem().toString();
        String contact = txtNumber.getText();
        String qualification = cmbQuali.getSelectedItem().toString();
        
        Date selectedDate = jdc.getDate();
        SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");
        String formattedDate = sdf.format(selectedDate);
        
        String address = txtAdress.getText();
         try {
            ps = conn.prepareStatement(sql);
            ps.setString(1, name);
            ps.setString(2, gender);
            //ps.setInt(3,Integer.parseInt(age));
            ps.setString(3,age);
            ps.setString(4, bloodGroup);
            ps.setString(5, contact);
            ps.setString(6,qualification);
            ps.setString(7,formattedDate);
            ps.setString(8,address);
            ps.setBytes(9,byteImage);
            ps.setInt(10, Integer.parseInt(txtId.getText()));
            ps.execute();
     
            clearAllFields();
            
            String sqlQueryData = "SELECT * FROM  employees";
            updateTableData(sqlQueryData);
                JOptionPane.showMessageDialog(null, "'Record Updated");

            
        }
        catch(SQLException | HeadlessException e){
            JOptionPane.showMessageDialog(null, "Issue"+e.getMessage());
        }
        }
    }
    private void searchFilter(){
                  String key = txtSrch.getText();
                  String sql;
                  if(!key.equals("")){
                      sql = "SELECT * FROM employees WHERE name like '%"+key+"%' ";
                  }else {
                      sql = "SELECT * FROM employees";
                   }
                  updateTableData(sql);
    }
    private DefaultTableModel getMyTableModel(TableModel dtm){
        int nRow = dtm.getRowCount();
        int nCol = dtm.getColumnCount();
        
        Object[][] tableData = new Object[nRow][nCol];
        
        for (int i = 0; i < nRow; i++) {
            for (int j = 0; j < nCol; j++) {
                tableData[i][j] = dtm.getValueAt(i, j);
            }
        }
        String [] colHeads = {"ID","Name","Gender","Age","BloodGroup","Contact No","Qualification","DOJ","Address","Image"};
        DefaultTableModel myModel = new DefaultTableModel(tableData,colHeads){
            
            @Override
            public boolean isCellEditable(int row,int col){ 
                return  false;
          }            
        };
        return myModel;
    }
   private void updateTableData(String sql){
        try {
            ps = conn.prepareStatement(sql);  
            rs = ps.executeQuery();
            jtableData.setModel(getMyTableModel(DbUtils.resultSetToTableModel(rs)));
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, "issue"+ex.getMessage());
           
        }
     
   }
   private void disableAll(){
       txtId.setEnabled(false);
       txtName.setEnabled(false);
       maleButton.setEnabled(false);
       femaleButton.setEnabled(false);
       txtAge.setEnabled(false);
       cmbBlood.setEnabled(false);
       txtNumber.setEnabled(false);
       cmbQuali.setEnabled(false);
       jdc.setEnabled(false);
       txtAdress.setEnabled(false);
       txtImgPath.setEnabled(false);
       butImage.setEnabled(false);
   }
   
   private void enableAll(){
        txtId.setEnabled(true);
       txtName.setEnabled(true);
       maleButton.setEnabled(true);
       femaleButton.setEnabled(true);
       txtAge.setEnabled(true);
       cmbBlood.setEnabled(true);
       txtNumber.setEnabled(true);
       cmbQuali.setEnabled(true);
       jdc.setEnabled(true);
       txtAdress.setEnabled(true);
       txtImgPath.setEnabled(true);
       butImage.setEnabled(true);
   }
}
/*
WindowEvent we = new WindowEvent(this,WindowEvent.Window_Closing);
    Toolkit.getDefaultToolkit().getSystemEventQueue().postEvent(we);

*/